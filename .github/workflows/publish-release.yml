name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - release/*
      - dev

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      DEV_VERSION: ${{ steps.set-version.outputs.dev-version }}
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache setup
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Generate version for dev images
        id: set-version
        run: |
          if [[ "${GITHUB_REF}" == "refs/heads/dev" ]]; then
            echo "DEV_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
            echo "dev-version=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT
          fi

  build-and-push:
    needs: [setup]
    runs-on: ubuntu-latest

    steps:
      - name: Restore setup
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        run: |
          LOWERCASE_IMAGE_NAME=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          echo "LOWERCASE_IMAGE_NAME=${LOWERCASE_IMAGE_NAME}" >> $GITHUB_ENV


      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:dev
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:dev-${{ needs.setup.outputs.DEV_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}


  update-tag-dev:
    needs: [ setup, build-and-push ]
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/dev'
    steps:
      - name: Clone target repository
        env:
          TARGET_REPO_PAT: ${{ secrets.CR_PAT }}
        run: |
          git clone https://x-access-token:${{ secrets.CR_PAT }}@github.com/VNxyz1/connect-u-deployment.git target-repo
          cd target-repo

      - name: Update image tag
        run: |
          cd target-repo
          sed -i 's|image: ghcr.io/vnxyz1/connect-u-frontend:.*|image: ghcr.io/vnxyz1/connect-u-frontend:dev-${{ needs.setup.outputs.DEV_VERSION }}|' connect-u/dev/argocd-conf/frontend-deployment.yaml

      - name: Commit and push changes
        run: |
          cd target-repo
          git config user.name "GitHub Action Bot"
          git config user.email "actions@github.com"
          git add connect-u/dev/argocd-conf/frontend-deployment.yaml
          git commit -m "Update image tag to dev-${{ needs.setup.outputs.DEV_VERSION }}"
          git push
