name: Build and Push Docker Image

on:
  push:
    branches:
      - main
      - release/*
      - dev  # Trigger auch bei Pushes auf den dev-Branch

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  NODE_VERSION: 20

jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          check-latest: true
          cache: npm

      - name: Install dependencies
        run: |
          npm install @angular/cli
          npm ci

      - name: Build project
        run: npm run build

      - name: Cache setup
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

  build-and-push:
    needs: [setup]
    runs-on: ubuntu-latest

    steps:
      - name: Restore setup
        uses: actions/cache@v4
        with:
          path: ./*
          key: ${{ github.ref }}-${{ github.sha }}-setup

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.CR_PAT }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        run: |
          LOWERCASE_IMAGE_NAME=$(echo "${{ env.IMAGE_NAME }}" | tr '[:upper:]' '[:lower:]')
          echo "LOWERCASE_IMAGE_NAME=${LOWERCASE_IMAGE_NAME}" >> $GITHUB_ENV

      - name: Generate version for dev images
        if: github.ref == 'refs/heads/dev'
        id: version
        run: |
          echo "DEV_VERSION=$(date +%Y%m%d%H%M%S)" >> $GITHUB_ENV
          echo "Generated version: $DEV_VERSION"

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.meta.outputs.tags }}
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:dev
            ${{ env.REGISTRY }}/${{ env.LOWERCASE_IMAGE_NAME }}:dev-${{ env.DEV_VERSION }}
          labels: ${{ steps.meta.outputs.labels }}

